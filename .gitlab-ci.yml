variables:
  GITLAB_EE_VERSION: "master"
  GITLAB_CE_VERSION: "master"
  GITLAB_SHELL_VERSION: "master"
  GITLAB_WORKHORSE_VERSION: "v5.0.0"
  GITALY_VERSION: "master"
  GIT_VERSION: "2.17.1"
  GO_VERSION: "1.9.6"
  PG_VERSION: "9.6.8"
  MAILROOM_VERSION: "0.9.1"
  ALPINE_VERSION: "3.8"
  CFSSL_VERSION: "1.2"
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375

before_script:
  - source build-scripts/build.sh

stages:
  - phase-one
  - phase-two
  - phase-three
  - phase-four
  - phase-five
  - release

.job-base: &job-base
  image: "registry.gitlab.com/gitlab-org/gitlab-omnibus-builder:ruby_docker-0.0.7"
  services:
  - docker:dind
  dependencies: []
  retry: 1
  before_script:
    - source build-scripts/build.sh
    - if [ -n "$GITALY_SERVER_VERSION" ]; then export GITALY_VERSION=$GITALY_SERVER_VERSION; fi
    - export {CONTAINER_VERSION,BASE_VERSION}=$(get_version gitlab-ruby)
    - export TARGET_VERSION=$(get_target_version)
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" "$CI_REGISTRY"

gitlab-ruby:
  <<: *job-base
  stage: phase-one
  script:
  - build_if_needed
  - push_if_master

postgresql:
  <<: *job-base
  stage: phase-one
  script:
  - export CONTAINER_VERSION=($(echo -n "$TARGET_VERSION$PG_VERSION" | sha1sum))
  - build_if_needed --build-arg "PG_VERSION=$PG_VERSION"
  - if [ -n "$BUILDING_IMAGE" ]; then
  -  tag_and_push $PG_VERSION
  - fi
  - push_if_master

cfssl-self-sign:
  <<: *job-base
  stage: phase-one
  script:
  - export CONTAINER_VERSION=($(echo -n "$TARGET_VERSION$CFSSL_VERSION" | sha1sum))
  - build_if_needed --build-arg "CFSSL_VERSION=$CFSSL_VERSION" --build-arg "ALPINE_VERSION=$ALPINE_VERSION"
  - push_if_master "$CFSSL_VERSION"
  - push_if_master

kubectl:
  <<: *job-base
  stage: phase-one
  script:
  - export CONTAINER_VERSION=($(echo -n "$TARGET_VERSION$(date -u +%D)" | sha1sum))
  - build_if_needed
  - push_if_master

alpine-certificates:
  <<: *job-base
  stage: phase-one
  script:
  # sets CA_PKG_VERSION to `20171114-r3` (from `P:ca-certificates\nV:VERSION\n`)
  - export CA_PKG_VERSION=$(curl -qs http://dl-cdn.alpinelinux.org/alpine/v${ALPINE_VERSION}/main/x86_64/APKINDEX.tar.gz | tar xzf - -O APKINDEX | grep -A1 '^P:ca-certificates$' | tail -n1 | cut -d ':' -f2)
  - export CONTAINER_VERSION=($(echo -n "$TARGET_VERSION$CA_PKG_VERSION" | sha1sum))
  - build_if_needed --build-arg "ALPINE_VERSION=${ALPINE_VERSION}" --build-arg "CA_PKG_VERSION=${CA_PKG_VERSION}"
  - push_if_master ${CA_PKG_VERSION}
  - push_if_master

gitlab-redis-ha:
  <<: *job-base
  stage: phase-two
  script:
  - export CONTAINER_VERSION=($(echo -n "$TARGET_VERSION$(date -u +%D)" | sha1sum))
  - build_if_needed
  - push_if_master

gitlab-go:
  <<: *job-base
  stage: phase-two
  script:
      - export CONTAINER_VERSION="$GO_VERSION"
      - ruby_version=$(get_version gitlab-ruby)
      - build_if_needed --build-arg "GO_VERSION=$GO_VERSION" --build-arg "FROM_IMAGE=$CI_REGISTRY_IMAGE/gitlab-ruby" --build-arg "TAG=$ruby_version"
      - push_if_master
  dependencies:
      - gitlab-ruby

gitlab-rails-ee:
  <<: *job-base
  stage: phase-four
  script:
  - export CONTAINER_VERSION=($(echo -n "$BASE_VERSION$TARGET_VERSION$GITLAB_EE_VERSION$(date -u +%D)" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-go:$GO_VERSION"
  - pg_image="$CI_REGISTRY_IMAGE/postgresql:$PG_VERSION"
  - docker pull $pg_image > /dev/null || true
  - build_if_needed --build-arg "GITLAB_EDITION=gitlab-ee" --build-arg "GITLAB_VERSION=${GITLAB_EE_VERSION}" --build-arg "CACHE_BUSTER=$GITLAB_EE_VERSION$(date -uI)" --build-arg "TAG=$GO_VERSION" --build-arg "PG_IMAGE=$pg_image"
  - push_if_master $GITLAB_EE_VERSION
  except:
    variables:
      - $CE_PIPELINE

gitlab-rails-ce:
  <<: *job-base
  stage: phase-four
  script:
  - export CONTAINER_VERSION=($(echo -n "$BASE_VERSION$TARGET_VERSION$GITLAB_CE_VERSION$(date -u +%D)" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-go:$GO_VERSION"
  - pg_image="$CI_REGISTRY_IMAGE/postgresql:$PG_VERSION"
  - docker pull $pg_image > /dev/null || true
  - build_if_needed --build-arg "GITLAB_EDITION=gitlab-ce" --build-arg "GITLAB_VERSION=${GITLAB_CE_VERSION}" --build-arg "CACHE_BUSTER=$GITLAB_CE_VERSION$(date -uI)" --build-arg "TAG=$GO_VERSION" --build-arg "PG_IMAGE=$pg_image"
  - push_if_master $GITLAB_CE_VERSION
  except:
    variables:
      - $EE_PIPELINE

gitlab-task-runner-ee:
  <<: *job-base
  stage: phase-five
  script:
  - rails_version=$(get_version gitlab-rails)
  - rails_container=($(echo -n "$BASE_VERSION$rails_version$GITLAB_EE_VERSION$(date -u +%D)" | sha1sum))
  - export CONTAINER_VERSION=($(echo -n "$rails_container$TARGET_VERSION" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-rails-ee:$rails_container"
  - build_if_needed --build-arg "FROM_IMAGE=$CI_REGISTRY_IMAGE/gitlab-rails-ee" --build-arg "TAG=$rails_container"
  - push_if_master $GITLAB_EE_VERSION
  dependencies:
    - gitlab-rails-ee
  except:
    variables:
      - $CE_PIPELINE

gitlab-task-runner-ce:
  <<: *job-base
  stage: phase-five
  script:
  - rails_version=$(get_version gitlab-rails)
  - rails_container=($(echo -n "$BASE_VERSION$rails_version$GITLAB_CE_VERSION$(date -u +%D)" | sha1sum))
  - export CONTAINER_VERSION=($(echo -n "$rails_container$TARGET_VERSION" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-rails-ce:$rails_container"
  - build_if_needed --build-arg "FROM_IMAGE=$CI_REGISTRY_IMAGE/gitlab-rails-ce" --build-arg "TAG=$rails_container"
  - push_if_master $GITLAB_CE_VERSION
  dependencies:
    - gitlab-rails-ce
  except:
    variables:
      - $EE_PIPELINE

gitlab-unicorn-ee:
  <<: *job-base
  stage: phase-five
  script:
  - rails_version=$(get_version gitlab-rails)
  - rails_container=($(echo -n "$BASE_VERSION$rails_version$GITLAB_EE_VERSION$(date -u +%D)" | sha1sum))
  - export CONTAINER_VERSION=($(echo -n "$rails_container$TARGET_VERSION" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-rails-ee:$rails_container"
  - build_if_needed --build-arg "FROM_IMAGE=$CI_REGISTRY_IMAGE/gitlab-rails-ee" --build-arg "TAG=$rails_container"
  - push_if_master $GITLAB_EE_VERSION
  dependencies:
    - gitlab-rails-ee
  except:
    variables:
      - $CE_PIPELINE

gitlab-unicorn-ce:
  <<: *job-base
  stage: phase-five
  script:
  - rails_version=$(get_version gitlab-rails)
  - rails_container=($(echo -n "$BASE_VERSION$rails_version$GITLAB_CE_VERSION$(date -u +%D)" | sha1sum))
  - export CONTAINER_VERSION=($(echo -n "$rails_container$TARGET_VERSION" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-rails-ce:$rails_container"
  - build_if_needed --build-arg "FROM_IMAGE=$CI_REGISTRY_IMAGE/gitlab-rails-ce" --build-arg "TAG=$rails_container"
  - push_if_master $GITLAB_CE_VERSION
  dependencies:
    - gitlab-rails-ce
  except:
    variables:
      - $EE_PIPELINE

gitlab-sidekiq-ee:
  <<: *job-base
  stage: phase-five
  script:
  - rails_version=$(get_version gitlab-rails)
  - rails_container=($(echo -n "$BASE_VERSION$rails_version$GITLAB_EE_VERSION$(date -u +%D)" | sha1sum))
  - export CONTAINER_VERSION=($(echo -n "$rails_container$TARGET_VERSION" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-rails-ee:$rails_container"
  - build_if_needed --build-arg "FROM_IMAGE=$CI_REGISTRY_IMAGE/gitlab-rails-ee" --build-arg "TAG=$rails_container"
  - push_if_master $GITLAB_EE_VERSION
  dependencies:
    - gitlab-rails-ee
  except:
    variables:
      - $CE_PIPELINE

gitlab-sidekiq-ce:
  <<: *job-base
  stage: phase-five
  script:
  - rails_version=$(get_version gitlab-rails)
  - rails_container=($(echo -n "$BASE_VERSION$rails_version$GITLAB_CE_VERSION$(date -u +%D)" | sha1sum))
  - export CONTAINER_VERSION=($(echo -n "$rails_container$TARGET_VERSION" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-rails-ce:$rails_container"
  - build_if_needed --build-arg "FROM_IMAGE=$CI_REGISTRY_IMAGE/gitlab-rails-ce" --build-arg "TAG=$rails_container"
  - push_if_master $GITLAB_CE_VERSION
  dependencies:
    - gitlab-rails-ce
  except:
    variables:
      - $EE_PIPELINE

gitlab-mailroom:
  <<: *job-base
  stage: phase-two
  script:
      - export CONTAINER_VERSION="$MAILROOM_VERSION"
      - ruby_version=$(get_version gitlab-ruby)
      - build_if_needed --build-arg "MAILROOM_VERSION=$MAILROOM_VERSION" --build-arg "FROM_IMAGE=$CI_REGISTRY_IMAGE/gitlab-ruby" --build-arg "TAG=$ruby_version"
      - push_if_master
  dependencies:
      - gitlab-ruby

gitlab-shell:
  <<: *job-base
  stage: phase-three
  script:
  - export CONTAINER_VERSION=($(echo -n "$BASE_VERSION$TARGET_VERSION$GITLAB_SHELL_VERSION$(date -u +%D)" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-go:$GO_VERSION"
  - build_if_needed --build-arg "TAG=$GO_VERSION" --build-arg "GITLAB_SHELL_VERSION=${GITLAB_SHELL_VERSION}" --build-arg "CACHE_BUSTER=$GITLAB_SHELL_VERSION$(date -uI)"
  - push_if_master $GITLAB_SHELL_VERSION
  dependencies:
    - gitlab-go

git-base:
  <<: *job-base
  stage: phase-three
  script:
      - export CONTAINER_VERSION="$GIT_VERSION"
      - build_if_needed --build-arg "TAG=$GO_VERSION" --build-arg "GIT_VERSION=$GIT_VERSION"
      - push_if_master

gitaly:
  <<: *job-base
  stage: phase-four
  script:
  - shell_version=$(get_version gitlab-shell)
  - export shell_container=($(echo -n "$BASE_VERSION$shell_version$GITLAB_SHELL_VERSION$(date -u +%D)" | sha1sum))
  - export CONTAINER_VERSION=($(echo -n "$shell_container$GITALY_VERSION$GIT_VERSION$TARGET_VERSION" | sha1sum))
  - export BASE_IMAGE="$CI_REGISTRY_IMAGE/gitlab-shell:$shell_container"
  - build_if_needed --build-arg "GITALY_VERSION=${GITALY_VERSION}" --build-arg "TAG=$GIT_VERSION" --build-arg "SHELL_CONTAINER=$shell_container" --build-arg "CACHE_BUSTER=$GITALY_VERSION$(date -uI)"
  - push_if_master $GITALY_VERSION
  dependencies:
    - gitlab-shell

gitlab-workhorse-ee:
  <<: *job-base
  stage: phase-five
  script:
      - rails_version=$(get_version gitlab-rails)
      - ruby_version=$(get_version gitlab-ruby)
      - rails_container=($(echo -n "$BASE_VERSION$rails_version$GITLAB_EE_VERSION$(date -u +%D)" | sha1sum))
      - export CONTAINER_VERSION=($(echo -n "$GITLAB_WORKHORSE_VERSION$rails_container$TARGET_VERSION" | sha1sum))
      - export BASE_IMAGE="$CI_REGISTRY_IMAGE/git-base:$GIT_VERSION"
      - build_if_needed --build-arg "TAG=$GIT_VERSION" --build-arg "WORKHORSE_VERSION=$GITLAB_WORKHORSE_VERSION" --build-arg "RAILS_VERSION=${rails_container}" --build-arg "$RUBY_VERSION=$ruby_version" --build-arg "GITLAB_EDITION=gitlab-rails-ee"
      - push_if_master $GITLAB_EE_VERSION
  except:
    variables:
      - $CE_PIPELINE

gitlab-workhorse-ce:
  <<: *job-base
  stage: phase-five
  script:
      - rails_version=$(get_version gitlab-rails)
      - ruby_version=$(get_version gitlab-ruby)
      - rails_container=($(echo -n "$BASE_VERSION$rails_version$GITLAB_CE_VERSION$(date -u +%D)" | sha1sum))
      - export CONTAINER_VERSION=($(echo -n "$GITLAB_WORKHORSE_VERSION$rails_container$TARGET_VERSION" | sha1sum))
      - export BASE_IMAGE="$CI_REGISTRY_IMAGE/git-base:$GIT_VERSION"
      - build_if_needed --build-arg "TAG=$GIT_VERSION" --build-arg "WORKHORSE_VERSION=$GITLAB_WORKHORSE_VERSION" --build-arg "RAILS_VERSION=${rails_container}" --build-arg "$RUBY_VERSION=$ruby_version" --build-arg "GITLAB_EDITION=gitlab-rails-ce"
      - push_if_master $GITLAB_CE_VERSION
  except:
    variables:
      - $EE_PIPELINE

release-chart:
  stage: release
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:ruby-2.4-golang-1.10-git-2.17
  script:
  - git clone https://gitlab.com/gitlab-org/release-tools.git --depth 10 release-tools
  - cd release-tools
  - source scripts/setup_ssh.sh
  - echo "$HELM_RELEASE_BOT_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - git config --global user.email "dj+helm-rel-bot@gitlab.com"
  - git config --global user.name "GitLab Helm Chart Release Bot"
  - bundle install --jobs=$(nproc) --retry=3
  - bundle exec rake helm:tag_chart[,$(trim_tag $GITLAB_EE_VERSION)]
  only:
    refs:
      - pipelines@gitlab-org/build/CNG
      - master@gitlab-org/build/CNG
    variables:
      - $GITLAB_EE_VERSION =~ /^v\d+\.\d+\.\d+(-rc\d+)?-ee$/
  except:
    variables:
      - $CE_PIPELINE
